# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  print_pipeline_id:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: echo $CIRCLE_WORKFLOW_ID

  print_hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:2020.01
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: |
            echo Hello
            echo $MY_ENV_VAR
  print_hello_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: sudo echo "text to output here" > output.txt
      - run:
          command: echo Failed
          when: on_fail
      #- persist_to_workspace:
      #    root: ~/
      #    paths:
      #      - output.txt

  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      #- attach_workspace:
      #  at: ~/
      #- run: cat ~/output.txt

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - print_pipeline_id
      - print_hello_world
      - print_output_file
        #requires:
          #- print_hello_world
